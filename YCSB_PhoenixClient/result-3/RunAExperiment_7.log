+ workloadfile=workloads/thin_table_workload
+ RESULT_DIR=./result/
+ SHORT_SLEEP_TIME=10
+ LONG_SLEEP_TIME=100
+ number_of_threads=20
+ output_file_suffix=.dat
+ echo 'stoping hbase...'
stoping hbase...
+ ssh hadoop@master /home/hadoop/hbase/bin/stop-hbase.sh
stopping hbase................................
yahoo005.nicl.cs.duke.edu: stopping zookeeper.
yahoo008.nicl.cs.duke.edu: stopping zookeeper.
yahoo007.nicl.cs.duke.edu: stopping zookeeper.
yahoo006.nicl.cs.duke.edu: stopping zookeeper.
+ sleep 10
+ echo 'stoping dfs...'
stoping dfs...
+ ssh hadoop@master /home/hadoop/hadoop/bin/stop-dfs.sh
stopping namenode
master: stopping datanode
slave1: stopping datanode
slave3: stopping datanode
slave2: stopping datanode
master: stopping secondarynamenode
+ sleep 10
+ echo 'starting dfs...'
starting dfs...
+ ssh hadoop@master /home/hadoop/hadoop/bin/start-dfs.sh
starting namenode, logging to /home/hadoop/hadoop-1.2.1/libexec/../logs/hadoop-hadoop-namenode-yahoo005.out
master: starting datanode, logging to /home/hadoop/hadoop-1.2.1/libexec/../logs/hadoop-hadoop-datanode-yahoo005.out
slave1: starting datanode, logging to /home/hadoop/hadoop-1.2.1/libexec/../logs/hadoop-hadoop-datanode-yahoo006.out
slave3: starting datanode, logging to /home/hadoop/hadoop-1.2.1/libexec/../logs/hadoop-hadoop-datanode-yahoo008.out
slave2: starting datanode, logging to /home/hadoop/hadoop-1.2.1/libexec/../logs/hadoop-hadoop-datanode-yahoo007.out
master: starting secondarynamenode, logging to /home/hadoop/hadoop-1.2.1/libexec/../logs/hadoop-hadoop-secondarynamenode-yahoo005.out
+ sleep 100
+ echo 'starting hbase...'
starting hbase...
+ ssh hadoop@master /home/hadoop/hbase/bin/start-hbase.sh
yahoo005.nicl.cs.duke.edu: starting zookeeper, logging to /home/hadoop/hbase/bin/../logs/hbase-hadoop-zookeeper-yahoo005.out
yahoo007.nicl.cs.duke.edu: starting zookeeper, logging to /home/hadoop/hbase/bin/../logs/hbase-hadoop-zookeeper-yahoo007.out
yahoo008.nicl.cs.duke.edu: starting zookeeper, logging to /home/hadoop/hbase/bin/../logs/hbase-hadoop-zookeeper-yahoo008.out
yahoo006.nicl.cs.duke.edu: starting zookeeper, logging to /home/hadoop/hbase/bin/../logs/hbase-hadoop-zookeeper-yahoo006.out
starting master, logging to /home/hadoop/hbase/bin/../logs/hbase-hadoop-master-yahoo005.out
master: starting regionserver, logging to /home/hadoop/hbase/bin/../logs/hbase-hadoop-regionserver-yahoo005.out
slave2: starting regionserver, logging to /home/hadoop/hbase/bin/../logs/hbase-hadoop-regionserver-yahoo007.out
slave1: starting regionserver, logging to /home/hadoop/hbase/bin/../logs/hbase-hadoop-regionserver-yahoo006.out
slave3: starting regionserver, logging to /home/hadoop/hbase/bin/../logs/hbase-hadoop-regionserver-yahoo008.out
+ sleep 100
+ echo 'droping the usertable...'
droping the usertable...
+ ssh hadoop@master /home/hadoop/hbase/bin/hbase shell /home/hadoop/git/schema_design/script/drop_usertable.sql

ERROR: 60000 millis timeout while waiting for channel to be ready for read. ch : java.nio.channels.SocketChannel[connected local=/152.3.144.175:53393 remote=slave2/152.3.144.177:60020]

Here is some help for this command:
Start disable of named table:
  hbase> disable 't1'
  hbase> disable 'ns1:t1'



ERROR: 60000 millis timeout while waiting for channel to be ready for read. ch : java.nio.channels.SocketChannel[connected local=/152.3.144.175:53403 remote=slave2/152.3.144.177:60020]

Here is some help for this command:
Drop the named table. Table must first be disabled:
  hbase> drop 't1'
  hbase> drop 'ns1:t1'


+ echo 'sleeping for short time...'
sleeping for short time...
+ sleep 10
+ echo 'creating usertable...'
creating usertable...
+ ssh hadoop@master /home/hadoop/hbase/bin/hbase shell /home/hadoop/git/schema_design/script/create_user_table1.sql

ERROR: Can't get master address from ZooKeeper; znode data == null

Here is some help for this command:
Creates a table. Pass a table name, and a set of column family
specifications (at least one), and, optionally, table configuration.
Column specification can be a simple string (name), or a dictionary
(dictionaries are described below in main help output), necessarily 
including NAME attribute. 
Examples:

Create a table with namespace=ns1 and table qualifier=t1
  hbase> create 'ns1:t1', {NAME => 'f1', VERSIONS => 5}

Create a table with namespace=default and table qualifier=t1
  hbase> create 't1', {NAME => 'f1'}, {NAME => 'f2'}, {NAME => 'f3'}
  hbase> # The above in shorthand would be the following:
  hbase> create 't1', 'f1', 'f2', 'f3'
  hbase> create 't1', {NAME => 'f1', VERSIONS => 1, TTL => 2592000, BLOCKCACHE => true}
  hbase> create 't1', {NAME => 'f1', CONFIGURATION => {'hbase.hstore.blockingStoreFiles' => '10'}}
  
Table configuration options can be put at the end.
Examples:

  hbase> create 'ns1:t1', 'f1', SPLITS => ['10', '20', '30', '40']
  hbase> create 't1', 'f1', SPLITS => ['10', '20', '30', '40']
  hbase> create 't1', 'f1', SPLITS_FILE => 'splits.txt', OWNER => 'johndoe'
  hbase> create 't1', {NAME => 'f1', VERSIONS => 5}, METADATA => { 'mykey' => 'myvalue' }
  hbase> # Optionally pre-split the table into NUMREGIONS, using
  hbase> # SPLITALGO ("HexStringSplit", "UniformSplit" or classname)
  hbase> create 't1', 'f1', {NUMREGIONS => 15, SPLITALGO => 'HexStringSplit'}
  hbase> create 't1', 'f1', {NUMREGIONS => 15, SPLITALGO => 'HexStringSplit', CONFIGURATION => {'hbase.hregion.scan.loadColumnFamiliesOnDemand' => 'true'}}

You can also keep around a reference to the created table:

  hbase> t1 = create 't1', 'f1'

Which gives you a reference to the table named 't1', on which you can then
call methods.


+ echo 'sleeping for short time...'
sleeping for short time...
+ sleep 10
+ echo 'running experiment...'
running experiment...
+ echo 'start time:'
start time:
++ date +%s
+ echo 1411227674
1411227674
+ java -classpath ../lib/phoenix-4.1.0-client.jar:core/target/core-0.1.4.jar:hbase/target/hbase-binding-0.1.4.jar:distribution/target/ycsb-0.1.4.tar.gz:jdbc/target/jdbc-binding-0.1.4.jar:hbase/src/main/conf/ com.yahoo.ycsb.OriginalClient -db com.yahoo.ycsb.db.OriginalHBaseClient -P /home/hadoop/git/schema_design/YCSB_PhoenixClient/workloads/thin_table_workload -p columnfamily=cf -p readproportion=0.3 -p insertproportion=.07 -t -threads 20 -s
+ echo 'end time:'
end time:
++ date +%s
+ echo 1411391020
1411391020
+ echo 'sleeping for short time...'
sleeping for short time...
+ sleep 10
